# For full config options, check the docs:
#    docs.serverless.com

service: speedsnitch-agent

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: go1.x
  apiKeys:
    - ${self:custom.namespace}-agent
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:Scan"
        - "dynamodb:UpdateItem"
      Resource:
        - Fn::Join:
          - ":"
          - - "arn:aws:dynamodb"
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - Fn::Join:
              - ""
              - - "table/"
                - ${self:custom.dataTable}
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource:
        - Fn::Join:
          - ":"
          - - "arn:aws:dynamodb"
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - Fn::Join:
              - ""
              - - "table/"
                - ${self:custom.taskLogTable}

  # you can define service wide environment variables here
  environment:
    stage: ${self:custom.stage}
    namespace: ${self:custom.namespace}
    dataTable: ${self:custom.dataTable}
    taskLogTable: ${self:custom.taskLogTable}

custom:
  stage: ${opt:stage, self:provider.stage}
  namespace: ${self:service}_${self:custom.stage}
  dataTable: speedsnitch_${self:custom.stage}_data
  taskLogTable: speedsnitch_${self:custom.stage}_task_log

package:
 exclude:
   - ./**
 include:
   - ../../bin/hello
   - ../../bin/config
   - ../../bin/tasklog

functions:
  hello:
      handler: bin/hello
      events:
        - http:
            path: hello
            method: post
            private: true
  config:
      handler: bin/config
      events:
        - http:
            path: config/{macAddr}
            method: get
            private: true
            request:
              parameters:
                paths:
                  macAddr: true
  log:
      handler: bin/tasklog
      events:
        - http:
            path: log/{macAddr}/{entryType}
            method: post
            private: true
            request:
              parameters:
                paths:
                  macAddr: true
                  entryType: true