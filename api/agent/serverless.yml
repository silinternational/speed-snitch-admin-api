# For full config options, check the docs:
#    docs.serverless.com

service: speedsnitch-agent

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: go1.x
  timeout: 30
  apiKeys:
    - ${self:custom.namespace}-agent
  vpc:
    securityGroupIds:
      - ${env:VPC_SG_ID}
    subnetIds:
      - ${env:VPC_SUBNET1}
      - ${env:VPC_SUBNET2}
      - ${env:VPC_SUBNET3}

  # you can define service wide environment variables here
  environment:
    stage: ${self:custom.stage}
    namespace: ${self:custom.namespace}
    downloadBaseUrl: ${env:DOWNLOAD_BASE_URL}
    MYSQL_HOST: ${env:MYSQL_HOST}
    MYSQL_USER: ${env:MYSQL_USER}
    MYSQL_PASS: ${env:MYSQL_PASS}
    MYSQL_DB: ${env:MYSQL_DB}


plugins:
  - serverless-domain-manager

custom:
  stage: ${opt:stage, self:provider.stage}
  namespace: ${self:service}_${self:custom.stage}
  customDomain:
    domainName: ${env:CUSTOM_DOMAIN_NAME}
    basePath: ''
    stage: ${opt:stage, self:provider.stage}
    createRoute53Record: false
    certificateName: ${env:CERT_NAME}
    enabled: true

package:
 exclude:
   - ./**
 include:
   - ../../bin/hello
   - ../../bin/config
   - ../../bin/tasklog

functions:
  hello:
      handler: bin/hello
      events:
        - http:
            path: hello
            method: post
            private: true
  config:
      handler: bin/config
      events:
        - http:
            path: config/{macAddr}
            method: get
            private: true
            request:
              parameters:
                paths:
                  macAddr: true
  log:
      handler: bin/tasklog
      events:
        - http:
            path: log/{macAddr}/{entryType}
            method: post
            private: true
            request:
              parameters:
                paths:
                  macAddr: true
                  entryType: true
